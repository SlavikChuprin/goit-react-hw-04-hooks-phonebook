{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["module","exports","Filter","value","onChange","className","s","filterWrapper","type","filterInput","prototype","PropTypes","string","func","isRequired","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","reset","preventDefault","form","input","pattern","title","required","btn","ContactListItem","contact","onDeleteContact","contactItem","btnDel","onClick","id","shape","ContactList","visibleContacts","contactList","map","arrayOf","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","onVisibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","data","find","alert","uuidv4","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36806931.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Cc64\",\"input\":\"ContactForm_input__1vB79\",\"btn\":\"ContactForm_btn__W6f89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__2blZP\",\"filterInput\":\"Filter_filterInput__3OVJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__1Qo8I\",\"btnDel\":\"ContactListItem_btnDel__aU4Uy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1aKWJ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={s.filterWrapper}>\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.filterInput}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.prototype = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { useState } from 'react';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name: name, number: number });\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {contact.name}: {contact.number}\r\n      <button\r\n        type=\"button\"\r\n        className={s.btnDel}\r\n        onClick={() => onDeleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.prototype = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ visibleContacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {visibleContacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.prototype = {\r\n  visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Filter from './components/Filter';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ]);\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const submitFromForm = data => {\r\n    const { name } = data;\r\n    const nameAlreadyIs = contacts.find(contact => contact.name === name);\r\n\r\n    if (nameAlreadyIs) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    data.id = uuidv4();\r\n    setContacts(state => [...state, data]);\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    if (filter) {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      const newContactsArr = contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n      return newContactsArr;\r\n    }\r\n    return contacts;\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    setContacts(contacts.filter(contact => contact.id !== id));\r\n  };\r\n\r\n  const onVisibleContacts = getVisibleContacts();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={submitFromForm} />\r\n      <h2> Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList\r\n        visibleContacts={onVisibleContacts}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}